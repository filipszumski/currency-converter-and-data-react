{"version":3,"sources":["images/dollar-5360047_1920.jpg","App/Header/styled.js","App/Header/index.js","App/Form/styled.js","App/Form/Result/index.js","App/Form/index.js","App/Form/useRatesData.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/GlobalStyle.js","App/styled.js","App/theme.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","StyledHeader","styled","h1","theme","colors","title","Header","StyledForm","form","Paragraph","p","info","css","loadingState","errorState","error","styledResult","result","Label","label","breakpoints","mobile","Input","input","Button","button","buttonBackground","buttonText","Span","span","Result","amountPossessed","toFixed","possessedCurrency","amountRecived","wantedCurrency","Form","useState","state","ratesData","setRatesData","useEffect","setTimeout","fetch","then","response","ok","Error","statusText","json","rates","date","catch","console","useRatesData","setPossessedCurrency","setWantedCurrency","amount","setAmount","setResult","action","method","onSubmit","event","preventDefault","possessedCurrencyRate","wantedCurrencyRate","calculateResult","role","aria-label","className","as","placeholder","value","onChange","target","Object","keys","map","currency","key","type","name","step","min","required","Wrapper","fonts","clockFont","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","year","month","weekday","day","hour","minute","second","formatDate","GlobalStyle","createGlobalStyle","background","primaryFont","div","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,iD,oQCEpC,IAAMC,EAAeC,IAAOC,GAAV,KAEZ,qBAAEC,MAAiBC,OAAOC,SCDjCC,EAAS,kBACX,kBAACN,EAAD,uB,84DCFG,IAAMO,EAAaN,IAAOO,KAAV,KAMVC,EAAYR,IAAOS,EAAV,KAIhB,qBAAGC,MAAmBC,YAAJ,KACP,qBAAGT,MAAkBC,OAAOO,WAMvC,qBAAGE,cAAmCD,YAAJ,KAGvB,qBAAGT,MAAkBC,OAAOO,WAIvC,qBAAGG,YAA+BF,YAAJ,KAGnB,qBAAGT,MAAkBC,OAAOW,YAIvC,qBAAGC,cAAmCJ,YAAJ,KAKvB,qBAAGT,MAAkBC,OAAOa,aAIhCC,EAAQjB,IAAOkB,MAAV,KAKO,qBAAGhB,MAAkBiB,YAAYC,UAK7CC,EAAQrB,IAAOsB,MAAV,KAOLC,EAASvB,IAAOwB,OAAV,KAEK,qBAAGtB,MAAkBC,OAAOsB,oBAEvC,qBAAGvB,MAAkBC,OAAOuB,cAa5BC,EAAO3B,IAAO4B,KAAV,KAGQ,qBAAG1B,MAAkBiB,YAAYC,UC5EpDS,EAAS,SAAC,GAAD,IAAGb,EAAH,EAAGA,OAAH,OACX,kBAACR,EAAD,CAAWO,cAAY,KAChBC,GACC,oCACKA,EAAOc,gBAAgBC,QAAQ,GADpC,OAC8Cf,EAAOgB,kBADrD,YAEI,gCAAShB,EAAOiB,cAAcF,QAAQ,GAAtC,OAAgDf,EAAOkB,mBCHjEC,EAAO,WAAO,IAAD,ECHS,WAAO,IAAD,EACEC,mBAAS,CACzCC,MAAO,YAFuB,mBACzBC,EADyB,KACdC,EADc,KAyChC,OApCAC,qBAAU,WA8BRC,YA7BmB,WACDC,MAAM,mDAGnBC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAG3B,OAAOH,KAERD,MAAK,SAAAC,GAAQ,OAAIA,EAASI,UAC1BL,MAAK,SAAAC,GAAa,IACVK,EAAeL,EAAfK,MAAOC,EAAQN,EAARM,KAEdX,EAAa,CACXU,QACAC,OACAb,MAAO,eAGVc,OAAM,SAAArC,GACLsC,QAAQtC,MAAMA,GACdyB,EAAa,CACXF,MAAO,iBAKQ,OAEtB,IAII,CAFwBC,EAAvBW,MAAuBX,EAAhBY,KAAgBZ,EAAVD,ODnCQgB,GADZ,mBACVJ,EADU,KACHC,EADG,KACGb,EADH,OAEiCD,mBAAS,OAF1C,mBAEVJ,EAFU,KAESsB,EAFT,OAG2BlB,mBAAS,OAHpC,mBAGVF,EAHU,KAGMqB,EAHN,OAIWnB,mBAAS,IAJpB,mBAIVoB,EAJU,KAIFC,EAJE,OAKWrB,qBALX,mBAKVpB,EALU,KAKF0C,EALE,KA0BjB,OACE,kBAACpD,EAAD,CAAYqD,OAAO,GAAGC,OAAO,MAAMC,SARhB,SAACC,GACpBA,EAAMC,iBAbgB,WACtB,IAAMC,EAAwBf,EAAMjB,GAC9BiC,EAAqBhB,EAAMf,GAEjCwB,EAAU,CACR5B,iBAAkB0B,EAClBvB,cAAeuB,EAASS,EAAqBD,EAC7ChC,oBACAE,mBAOFgC,GACAT,EAAU,MAKG,YAAVpB,EAEG,oCACE,kBAAC7B,EAAD,CAAWI,cAAY,GAAvB,yCACuC,qEAA0C,0BAAMuD,KAAK,MAAMC,aAAW,gCAA5B,mBAIzE,YAAV/B,EAEE,oCACE,kBAAC7B,EAAD,CAAWK,YAAU,GAArB,2MAEoE,0BAAMsD,KAAK,MAAMC,aAAW,kCAA5B,kBAI5D,YAAV/B,GACA,oCACE,kBAAC7B,EAAD,KACE,kBAACS,EAAD,KACE,kBAACU,EAAD,CAAM0C,UAAU,mBAAhB,uCACA,kBAAChD,EAAD,CACEiD,GAAG,SACHC,YAAY,yBACZC,MAAOxC,EACPyC,SAAU,SAAAX,GAAK,OAAIR,EAAqBQ,EAAMY,OAAOF,SAEpDG,OAAOC,KAAK3B,GAAO4B,KAAI,SAAAC,GAAQ,OAC9B,4BACEC,IAAKD,EACLN,MAAOM,GAENA,SAOX,kBAACtE,EAAD,KACE,kBAACS,EAAD,KACE,kBAACU,EAAD,eACA,kBAACN,EAAD,CACE2D,KAAK,SACLC,KAAK,SACLC,KAAK,OACLX,YAAY,mBACZY,IAAI,IACJC,UAAQ,EACRZ,MAAOhB,EACPiB,SAAU,SAAAX,GAAK,OAAIL,EAAUK,EAAMY,OAAOF,YAKhD,kBAAChE,EAAD,KACE,kBAACS,EAAD,KACE,kBAACU,EAAD,6CACA,kBAACN,EAAD,CACEiD,GAAG,SACHE,MAAOtC,EACPuC,SAAU,SAAAX,GAAK,OAAIP,EAAkBO,EAAMY,OAAOF,SAEjDG,OAAOC,KAAK3B,GAAO4B,KAAI,SAAAC,GAAQ,OAC9B,4BACEC,IAAKD,EACLN,MAAOM,GAENA,SAOX,kBAACtE,EAAD,KACE,kBAACe,EAAD,kBAEF,kBAACf,EAAD,CAAWE,MAAI,GAAf,mEAC2D,6BAD3D,2BAEoBwC,GAEpB,kBAAC,EAAD,CAAQlC,OAAQA,O,0JElHvB,IAAMqE,EAAUrF,IAAOS,EAAV,KACD,qBAAEP,MAAiBoF,MAAMC,aCY/BC,EAAQ,WACjB,IAAMtC,ECdoB,WAAO,IAAD,EACRd,mBAAS,IAAIqD,MADL,mBACzBvC,EADyB,KACnBwC,EADmB,KAahC,OAVAlD,qBAAU,WACN,IAAMmD,EAAaC,aAAY,WAC3BF,EAAQ,IAAID,QACb,KAEH,OAAO,WACHI,cAAcF,MAEnB,IAEIzC,EDCM4C,GAEb,OACI,kBAACT,EAAD,sBAEK,IAjBM,SAACnC,GAAD,OACfA,EAAK6C,oBAAeC,EAAW,CAC3BC,KAAM,UACNC,MAAO,OACPC,QAAS,OACTC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAUHC,CAAWtD,K,ybEnBjB,IAAMuD,EAAcC,YAAH,IAcKC,KAGV,qBAAEzG,MAAiBoF,MAAMsB,e,sQClBrC,IAAMvB,EAAUrF,IAAO6G,IAAV,KAGI,qBAAE3G,MAAiBC,OAAOwG,cCLrCzG,EAAQ,CACjBC,OAAQ,CACJwG,WAAY,QACZlF,iBAAkB,OAClBC,WAAY,QACZtB,MAAO,OACPM,KAAM,qBACNM,OAAQ,OACRF,MAAO,WAEXK,YAAa,CACTC,OAAQ,KAEZkE,MAAO,CACHsB,YAAa,4BACbrB,UAAW,eCOJuB,MAbf,WACE,OACE,kBAAC,IAAD,CAAe5G,MAAOA,GACpB,kBAAC,EAAD,KACE,kBAACuG,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhF,MAAK,SAAAiF,GACJA,EAAaC,gBAEd1E,OAAM,SAAArC,GACLsC,QAAQtC,MAAMA,EAAMgH,c","file":"static/js/main.eafeee37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dollar-5360047_1920.60d3c8b2.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    text-align: center;\r\n    color: ${({theme}) => theme.colors.title};\r\n    font-size: 40px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <StyledHeader>Kantor Online</StyledHeader>\r\n);\r\n\r\nexport { Header };","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-auto-columns: 1fr;\r\n    grid-gap: 20px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    display: flex;\r\n    margin: 0px;\r\n\r\n    ${({ info }) => info && css`\r\n        color: ${({ theme }) => theme.colors.info};\r\n        font-size: 14px;\r\n        text-align: center;\r\n        justify-content: center;\r\n    `}\r\n\r\n    ${({ loadingState }) => loadingState && css`\r\n        text-align: center;\r\n        display: inline;\r\n        color: ${({ theme }) => theme.colors.info};\r\n        font-size: 18px;\r\n    `}\r\n\r\n    ${({ errorState }) => errorState && css`\r\n        text-align: center;\r\n        display: inline;\r\n        color: ${({ theme }) => theme.colors.error};\r\n        font-size: 18px;\r\n    `}\r\n    \r\n    ${({ styledResult }) => styledResult && css`\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        font-size: 28px;\r\n        color: ${({ theme }) => theme.colors.result};\r\n    `}\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    flex: 1 0 100%;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n            flex-wrap: wrap;\r\n        }\r\n    `;\r\n\r\nexport const Input = styled.input`\r\n    flex: 0 1 100%;\r\n    border-radius: 10px;\r\n    border: 1px solid teal;\r\n    padding: 8px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex: 1;\r\n    background-color: ${({ theme }) => theme.colors.buttonBackground};\r\n    border-radius: 5px;\r\n    color: ${({ theme }) => theme.colors.buttonText};\r\n    padding: 8px;\r\n    border: none;\r\n    transition: filter 0.5s;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    flex: 0 0 300px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        flex: 0 1 auto;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Paragraph } from \"../styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <Paragraph styledResult>\r\n        {!!result && (\r\n            <>\r\n                {result.amountPossessed.toFixed(2)}&nbsp;{result.possessedCurrency}&nbsp;=&nbsp;\r\n                <strong>{result.amountRecived.toFixed(2)}&nbsp;{result.wantedCurrency}</strong>\r\n            </>\r\n        )}\r\n    </Paragraph>\r\n);\r\n\r\nexport { Result };","import React, { useState } from \"react\";\r\nimport { Result } from \"./Result\";\r\nimport { StyledForm, Paragraph, Label, Input, Button, Span } from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nconst Form = () => {\r\n  const [rates, date, state] = useRatesData();\r\n  const [possessedCurrency, setPossessedCurrency] = useState(\"PLN\");\r\n  const [wantedCurrency, setWantedCurrency] = useState(\"EUR\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = () => {\r\n    const possessedCurrencyRate = rates[possessedCurrency];\r\n    const wantedCurrencyRate = rates[wantedCurrency];\r\n\r\n    setResult({\r\n      amountPossessed: +amount,\r\n      amountRecived: amount * wantedCurrencyRate / possessedCurrencyRate,\r\n      possessedCurrency,\r\n      wantedCurrency,\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    calculateResult();\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledForm action=\"\" method=\"GET\" onSubmit={onFormSubmit}>\r\n      {state === \"loading\" ?\r\n        (\r\n          <>\r\n            <Paragraph loadingState>\r\n              Trwa pobieranie kursów walut z &nbsp;<strong>Europejskiego Banku Centralnego...<span role=\"img\" aria-label=\"smiling face with sunglasses\">&#128526;</span></strong>\r\n            </Paragraph>\r\n          </>\r\n        )\r\n        : state === \"failure\" ?\r\n          (\r\n            <>\r\n              <Paragraph errorState>\r\n                Upps...Coś poszło nie tak. Sprawdź, czy masz połączenie z internetem.&nbsp;\r\n            Jeśli masz, to wygląda na to, że to nasz wina. Może spróbuj później ? <span role=\"img\" aria-label=\"smiling face with smiling eyes\">&#128522;</span>\r\n              </Paragraph>\r\n            </>\r\n          )\r\n          : state === \"success\" && (\r\n            <>\r\n              <Paragraph>\r\n                <Label>\r\n                  <Span className=\"form__labelText\">Wymieniasz z (wybierz walutę):</Span>\r\n                  <Input\r\n                    as=\"select\"\r\n                    placeholder=\"Wybierz walutę...\"\r\n                    value={possessedCurrency}\r\n                    onChange={event => setPossessedCurrency(event.target.value)}\r\n                  >\r\n                    {Object.keys(rates).map(currency => (\r\n                      <option\r\n                        key={currency}\r\n                        value={currency}\r\n                      >\r\n                        {currency}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Label>\r\n              </Paragraph>\r\n\r\n              <Paragraph>\r\n                <Label>\r\n                  <Span>Kwota:</Span>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"amount\"\r\n                    step=\"0.01\"\r\n                    placeholder=\"Wpisz kwotę\"\r\n                    min=\"0\"\r\n                    required\r\n                    value={amount}\r\n                    onChange={event => setAmount(event.target.value)}\r\n                  />\r\n                </Label>\r\n              </Paragraph>\r\n\r\n              <Paragraph>\r\n                <Label>\r\n                  <Span>Wymieniasz na (wybierz walutę):</Span>\r\n                  <Input\r\n                    as=\"select\"\r\n                    value={wantedCurrency}\r\n                    onChange={event => setWantedCurrency(event.target.value)}\r\n                  >\r\n                    {Object.keys(rates).map(currency => (\r\n                      <option\r\n                        key={currency}\r\n                        value={currency}\r\n                      >\r\n                        {currency}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Label>\r\n              </Paragraph>\r\n\r\n              <Paragraph>\r\n                <Button>Przelicz</Button>\r\n              </Paragraph>\r\n              <Paragraph info>\r\n              Kursy walut pobierane są z Europejskiego Banku Centralnego.<br/>\r\n              Aktualne na dzień: {date}\r\n          </Paragraph>\r\n              <Result result={result} />\r\n            </>\r\n          )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport { Form };","import { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n  const [ratesData, setRatesData] = useState({\r\n    state: \"loading\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchRates = () => {\r\n      const promise = fetch(\"https://api.exchangeratesapi.io/latest?base=PLN\");\r\n\r\n      promise\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n          }\r\n\r\n          return response;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          const {rates, date} = response;\r\n\r\n          setRatesData({\r\n            rates,\r\n            date,\r\n            state: \"success\",\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.error(error)\r\n          setRatesData({\r\n            state: \"failure\"\r\n          })\r\n        })\r\n    }\r\n\r\n    setTimeout(fetchRates, 1 * 1000)\r\n\r\n  }, []);\r\n\r\n  const { rates, date, state } = ratesData;\r\n\r\n  return [rates, date, state];\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-family: ${({theme}) => theme.fonts.clockFont};\r\n    font-size: 14px;\r\n    margin: 0;\r\n    text-align: end;\r\n`;","import React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) =>\r\n    date.toLocaleString(undefined, {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n    });\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dziś jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"../images/dollar-5360047_1920.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    font-family: ${({theme}) => theme.fonts.primaryFont}\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex: 0 1 750px;\r\n    font-size: 18px;\r\n    background-color: ${({theme}) => theme.colors.background};\r\n    padding: 40px;\r\n    border-radius: 50px;\r\n    box-shadow: 0px 0px 8px 1px;\r\n    opacity: 0.90;\r\n    margin: 20px;\r\n`;","export const theme = {\r\n    colors: {\r\n        background: \"white\",\r\n        buttonBackground: \"teal\",\r\n        buttonText: \"white\",\r\n        title: \"teal\",\r\n        info: \"rgb(107, 107, 107)\",\r\n        result: \"teal\",\r\n        error: \"crimson\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 767,\r\n    },\r\n    fonts: {\r\n        primaryFont: \"'Montserrat', sans-serif;\",\r\n        clockFont: \"monospace;\"\r\n    }\r\n};","import React from 'react';\nimport { Header } from \"./Header\";\nimport { Form } from \"./Form\";\nimport { Clock } from \"./Clock\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { Wrapper } from \"./styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport {theme} from \"./theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <GlobalStyle />\n        <Clock />\n        <Header />\n        <Form />\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}