{"version":3,"sources":["images/dollar-5360047_1920.jpg","common/Navigation/styled.js","common/Navigation/index.js","routes.js","features/rates/Converter/styled.js","features/rates/Converter/Result/index.js","common/Container/Clock/styled.js","common/Container/Clock/index.js","common/Container/Clock/useCurrentDate.js","common/Container/styled.js","common/Container/index.js","common/Header/styled.js","common/Header/index.js","features/rates/Converter/index.js","features/rates/Converter/useRatesData.js","features/rates/LatestRates/index.js","features/rates/TopRates/index.js","features/rates/Chart/index.js","App.js","GlobalStyle.js","serviceWorker.js","index.js","theme.js"],"names":["module","exports","Nav","styled","nav","theme","colors","buttonBackground","List","ul","Item","li","StyledNavLink","NavLink","attrs","activeClassName","background","Navigation","to","StyledForm","form","Paragraph","p","info","css","loadingState","errorState","error","styledResult","result","Label","label","breakpoints","mobile","Input","input","Button","button","buttonText","Span","span","Result","amountPossessed","toFixed","possessedCurrency","amountRecived","wantedCurrency","Wrapper","fonts","clockFont","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","year","month","weekday","day","hour","minute","second","formatDate","div","Container","children","StyledHeader","h1","title","Header","Converter","state","ratesData","setRatesData","setTimeout","a","axios","get","response","data","rates","console","useRatesData","setPossessedCurrency","setWantedCurrency","amount","setAmount","setResult","inputRef","useRef","action","method","onSubmit","event","preventDefault","possessedCurrencyRate","wantedCurrencyRate","calculateResult","current","focus","role","aria-label","className","as","placeholder","value","onChange","target","Object","keys","map","currency","key","ref","type","name","step","min","required","LatestRates","TopRates","Chart","App","basename","path","GlobalStyle","createGlobalStyle","primaryFont","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d295525d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dollar-5360047_1920.60d3c8b2.jpg\";","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Nav = styled.nav`\r\nflex: 1 0 100%;\r\nbackground-color: ${({ theme }) => theme.colors.buttonBackground};\r\n`;\r\n\r\nexport const List = styled.ul`\r\ndisplay: flex;\r\njustify-content: center;\r\nmargin: 0;\r\npadding: 0;\r\nlist-style-type: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\nmargin: 20px 10px 20px 10px;\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName: \"active\",\r\n}))`\r\n&.active {\r\n    font-weight: bold;\r\n}\r\ncolor: ${({ theme }) => theme.colors.background};\r\ntext-decoration: none;\r\n`;","import React from \"react\";\r\nimport { Nav, List, Item, StyledNavLink } from \"./styled\";\r\nimport { toConverter, toLatestRates, toChart, toTopRates } from \"../../routes\";\r\n\r\nexport const Navigation = () => (\r\n    <Nav>\r\n        <List>\r\n            <Item>\r\n                <StyledNavLink to={toConverter()}>Kalkulator walut</StyledNavLink>\r\n            </Item>\r\n            <Item>\r\n                <StyledNavLink to={toLatestRates()}>Ostatnie stawki</StyledNavLink>\r\n            </Item>\r\n            <Item>\r\n                <StyledNavLink to={toChart()}>Ostatnie 30 dni</StyledNavLink>\r\n            </Item>\r\n            <Item>\r\n                <StyledNavLink to={toTopRates()}>TOP 5</StyledNavLink>\r\n            </Item>\r\n        </List>\r\n    </Nav>\r\n\r\n\r\n)\r\n","export const toConverter = () => \"/converter\";\r\nexport const toLatestRates = () => \"/latest-rates\";\r\nexport const toChart = () => \"/chart\";\r\nexport const toTopRates = () => \"/top-rates\";","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-auto-columns: 1fr;\r\n    grid-gap: 20px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    display: flex;\r\n    margin: 0px;\r\n\r\n    ${({ info }) => info && css`\r\n        color: ${({ theme }) => theme.colors.info};\r\n        font-size: 14px;\r\n        text-align: center;\r\n        justify-content: center;\r\n    `}\r\n\r\n    ${({ loadingState }) => loadingState && css`\r\n        text-align: center;\r\n        display: inline;\r\n        color: ${({ theme }) => theme.colors.info};\r\n        font-size: 18px;\r\n    `}\r\n\r\n    ${({ errorState }) => errorState && css`\r\n        text-align: center;\r\n        display: inline;\r\n        color: ${({ theme }) => theme.colors.error};\r\n        font-size: 18px;\r\n    `}\r\n    \r\n    ${({ styledResult }) => styledResult && css`\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        font-size: 28px;\r\n        color: ${({ theme }) => theme.colors.result};\r\n    `}\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    flex: 1 0 100%;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n            flex-wrap: wrap;\r\n        }\r\n    `;\r\n\r\nexport const Input = styled.input`\r\n    flex: 0 1 100%;\r\n    border-radius: 10px;\r\n    border: 1px solid teal;\r\n    padding: 8px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex: 1;\r\n    background-color: ${({ theme }) => theme.colors.buttonBackground};\r\n    border-radius: 5px;\r\n    color: ${({ theme }) => theme.colors.buttonText};\r\n    padding: 8px;\r\n    border: none;\r\n    transition: filter 0.5s;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    flex: 0 0 300px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        flex: 0 1 auto;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Paragraph } from \"../styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <Paragraph styledResult>\r\n        {!!result && (\r\n            <>\r\n                {result.amountPossessed.toFixed(2)}&nbsp;{result.possessedCurrency}&nbsp;=&nbsp;\r\n                <strong>{result.amountRecived.toFixed(2)}&nbsp;{result.wantedCurrency}</strong>\r\n            </>\r\n        )}\r\n    </Paragraph>\r\n);\r\n\r\nexport { Result };","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    font-family: ${({theme}) => theme.fonts.clockFont};\r\n    font-size: 14px;\r\n    margin: 0;\r\n    text-align: end;\r\n`;","import React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) =>\r\n    date.toLocaleString(undefined, {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n    });\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dziś jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex: 0 1 800px;\r\n    font-size: 18px;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    padding: 40px;\r\n    border-radius: 50px;\r\n    box-shadow: 0px 0px 8px 1px;\r\n    opacity: 0.90;\r\n    margin: 20px;\r\n`;","import React from \"react\";\r\nimport { Clock } from \"./Clock\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nexport const Container = ({ children }) => (\r\n    <Wrapper>\r\n        <Clock />\r\n        {children}\r\n    </Wrapper>\r\n);","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    text-align: center;\r\n    color: ${({theme}) => theme.colors.title};\r\n    font-size: 40px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        {title}\r\n    </StyledHeader>\r\n);\r\n\r\nexport { Header };","import React, { useRef, useState } from \"react\";\r\nimport { Result } from \"./Result\";\r\nimport { Container } from \"../../../common/Container\";\r\nimport { Header } from \"../../../common/Header\";\r\nimport { StyledForm, Paragraph, Label, Input, Button, Span } from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nconst Converter = () => {\r\n  const [rates, date, state] = useRatesData();\r\n  const [possessedCurrency, setPossessedCurrency] = useState(\"PLN\");\r\n  const [wantedCurrency, setWantedCurrency] = useState(\"EUR\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [result, setResult] = useState();\r\n  const inputRef = useRef(null);\r\n\r\n  const calculateResult = () => {\r\n    const possessedCurrencyRate = rates[possessedCurrency];\r\n    const wantedCurrencyRate = rates[wantedCurrency];\r\n\r\n    setResult({\r\n      amountPossessed: +amount,\r\n      amountRecived: amount * wantedCurrencyRate / possessedCurrencyRate,\r\n      possessedCurrency,\r\n      wantedCurrency,\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    calculateResult();\r\n    setAmount(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Kalkulator walut\" />\r\n      <StyledForm action=\"\" method=\"GET\" onSubmit={onFormSubmit}>\r\n        {state === \"loading\" ?\r\n          (\r\n            <>\r\n              <Paragraph loadingState>\r\n                Trwa pobieranie kursów walut z &nbsp;<strong>Europejskiego Banku Centralnego...<span role=\"img\" aria-label=\"smiling face with sunglasses\">&#128526;</span></strong>\r\n              </Paragraph>\r\n            </>\r\n          )\r\n          : state === \"failure\" ?\r\n            (\r\n              <>\r\n                <Paragraph errorState>\r\n                  Upps...Coś poszło nie tak. Sprawdź, czy masz połączenie z internetem.&nbsp;\r\n            Jeśli masz, to wygląda na to, że to nasz wina. Może spróbuj później ? <span role=\"img\" aria-label=\"smiling face with smiling eyes\">&#128522;</span>\r\n                </Paragraph>\r\n              </>\r\n            )\r\n            : state === \"success\" && (\r\n              <>\r\n                <Paragraph>\r\n                  <Label>\r\n                    <Span className=\"form__labelText\">Wymieniasz z (wybierz walutę):</Span>\r\n                    <Input\r\n                      as=\"select\"\r\n                      placeholder=\"Wybierz walutę...\"\r\n                      value={possessedCurrency}\r\n                      onChange={event => setPossessedCurrency(event.target.value)}\r\n                    >\r\n                      {Object.keys(rates).map(currency => (\r\n                        <option\r\n                          key={currency}\r\n                          value={currency}\r\n                        >\r\n                          {currency}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Label>\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                  <Label>\r\n                    <Span>Kwota:</Span>\r\n                    <Input\r\n                      ref={inputRef}\r\n                      type=\"number\"\r\n                      name=\"amount\"\r\n                      step=\"0.01\"\r\n                      placeholder=\"Wpisz kwotę\"\r\n                      min=\"0\"\r\n                      required\r\n                      value={amount}\r\n                      onChange={event => setAmount(event.target.value)}\r\n                    />\r\n                  </Label>\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                  <Label>\r\n                    <Span>Wymieniasz na (wybierz walutę):</Span>\r\n                    <Input\r\n                      as=\"select\"\r\n                      value={wantedCurrency}\r\n                      onChange={event => setWantedCurrency(event.target.value)}\r\n                    >\r\n                      {Object.keys(rates).map(currency => (\r\n                        <option\r\n                          key={currency}\r\n                          value={currency}\r\n                        >\r\n                          {currency}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </Label>\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                  <Button>Przelicz</Button>\r\n                </Paragraph>\r\n                <Paragraph info>\r\n                  Kursy walut pobierane są z Europejskiego Banku Centralnego.<br />\r\n              Aktualne na dzień: {date}\r\n                </Paragraph>\r\n                <Result result={result} />\r\n              </>\r\n            )}\r\n      </StyledForm>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { Converter };","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n  const [ratesData, setRatesData] = useState({\r\n    state: \"loading\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://api.exchangeratesapi.io/latest?base=PLN\");\r\n\r\n        const {rates, date} = await response.data;\r\n\r\n        setRatesData({\r\n          rates,\r\n          date,\r\n          state: \"success\",\r\n        });\r\n        \r\n      } catch(error){\r\n        console.error(error);\r\n        setRatesData({\r\n          state: \"failure\",\r\n        })\r\n      };\r\n\r\n    }\r\n\r\n    setTimeout(fetchRates, 1 * 1000)\r\n\r\n  }, []);\r\n\r\n  const { rates, date, state } = ratesData;\r\n\r\n  return [rates, date, state];\r\n}","import React from \"react\";\r\nimport { Container } from \"../../../common/Container\";\r\nimport { Header } from \"../../../common/Header\";\r\nconst LatestRates = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Ostatnie stawki\" />\r\n      LATEST RATES\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { LatestRates };","import React from \"react\";\r\nimport { Container } from \"../../../common/Container\";\r\nimport { Header } from \"../../../common/Header\";\r\nconst TopRates = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Ostatnie stawki\" />\r\n      TOP 5\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { TopRates };","import React from \"react\";\r\nimport { Container } from \"../../../common/Container\";\r\nimport { Header } from \"../../../common/Header\";\r\nconst Chart = () => {\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"Ostatnie 30 dni\" />\r\n      LAST 30 DAYS\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport { Chart };","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Navigation } from \"./common/Navigation\";\r\nimport { Converter } from \"./features/rates/Converter\";\r\nimport { LatestRates } from \"./features/rates/LatestRates\";\r\nimport { TopRates } from \"./features/rates/TopRates\";\r\nimport { Chart } from \"./features/rates/Chart\";\r\nimport { toConverter, toLatestRates, toChart, toTopRates } from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"currency-converter-react\">\r\n      <Navigation />\r\n      <Switch>\r\n        <Route path={toConverter()}>\r\n          <Converter />\r\n        </Route>\r\n        <Route path={toLatestRates()}>\r\n          <LatestRates />\r\n        </Route>\r\n        <Route path={toChart()}>\r\n          <Chart />\r\n        </Route>\r\n        <Route path={toTopRates()}>\r\n          <TopRates />\r\n        </Route>\r\n        <Route>\r\n          <Redirect to={toConverter()} />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./images/dollar-5360047_1920.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    font-family: ${({ theme }) => theme.fonts.primaryFont}\r\n    }\r\n`;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport App from './App';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { theme } from \"./theme\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n    colors: {\r\n        background: \"white\",\r\n        buttonBackground: \"teal\",\r\n        buttonText: \"white\",\r\n        title: \"teal\",\r\n        info: \"rgb(107, 107, 107)\",\r\n        result: \"teal\",\r\n        error: \"crimson\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 767,\r\n    },\r\n    fonts: {\r\n        primaryFont: \"'Montserrat', sans-serif;\",\r\n        clockFont: \"monospace;\"\r\n    }\r\n};"],"sourceRoot":""}