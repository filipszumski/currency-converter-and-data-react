{"version":3,"sources":["images/dollar-5360047_1920.jpg","App/Header/styled.js","App/Header/index.js","App/Form/currencies.js","App/Form/styled.js","App/Form/Result/index.js","App/Form/index.js","App/Clock/styled.js","App/Clock/index.js","App/GlobalStyle.js","App/styled.js","App/theme.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","StyledHeader","styled","h1","theme","colors","title","Header","currencies","short","name","rate","StyledForm","form","Paragraph","p","info","css","result","Label","label","breakpoints","mobile","Select","select","Input","input","Button","button","buttonBackground","buttonText","Span","span","Result","amountPossessed","toFixed","possessedCurrency","amountRecived","wantedCurrency","Form","useState","setPossessedCurrency","amount","setAmount","setWantedCurrency","setResult","action","method","onSubmit","event","preventDefault","possessedCurrencyRate","find","currency","wantedCurrencyRate","calculateResult","className","value","onChange","target","map","key","type","step","placeholder","min","required","StyledClock","fonts","clockFont","Clock","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","toLocaleString","undefined","year","month","weekday","day","hour","minute","second","formatDate","GlobalStyle","createGlobalStyle","background","primaryFont","Wrapper","div","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,iD,oQCEpC,IAAMC,EAAeC,IAAOC,GAAV,KAEZ,qBAAEC,MAAiBC,OAAOC,SCDjCC,EAAS,kBACX,kBAACN,EAAD,uB,OCJEO,EAAa,CACf,CAACC,MAAO,MAAOC,KAAM,MAAOC,KAAM,GAClC,CAACF,MAAO,MAAOC,KAAM,MAAOC,KAAM,OAClC,CAACF,MAAO,MAAOC,KAAM,MAAOC,KAAM,QAClC,CAACF,MAAO,MAAOC,KAAM,MAAOC,KAAM,QAClC,CAACF,MAAO,MAAOC,KAAM,MAAOC,KAAM,S,wlDCH/B,IAAMC,EAAaV,IAAOW,KAAV,KAMVC,EAAYZ,IAAOa,EAAV,KAIhB,qBAAGC,MAAmBC,YAAJ,KACP,qBAAGb,MAAkBC,OAAOW,WAIvC,qBAAGE,QAAuBD,YAAJ,KAKX,qBAAGb,MAAkBC,OAAOa,aAIhCC,EAAQjB,IAAOkB,MAAV,KAKO,qBAAGhB,MAAkBiB,YAAYC,UAK7CC,EAASrB,IAAOsB,OAAV,KAONC,EAAQvB,IAAOwB,MAAV,KAOLC,EAASzB,IAAO0B,OAAV,KAEK,qBAAExB,MAAiBC,OAAOwB,oBAErC,qBAAEzB,MAAiBC,OAAOyB,cAY1BC,EAAO7B,IAAO8B,KAAV,KAGQ,qBAAG5B,MAAkBiB,YAAYC,UClEpDW,EAAS,SAAC,GAAD,IAAGf,EAAH,EAAGA,OAAH,OACX,kBAACJ,EAAD,CAAWI,QAAM,KACVA,GACC,oCACKA,EAAOgB,gBAAgBC,QAAQ,GADpC,OAC8CjB,EAAOkB,kBADrD,YAEI,gCAASlB,EAAOmB,cAAcF,QAAQ,GAAtC,OAAgDjB,EAAOoB,mBCHjEC,EAAO,WAAO,IAAD,EACiCC,mBAAShC,EAAW,GAAGE,MADxD,mBACV0B,EADU,KACSK,EADT,OAEWD,mBAAS,IAFpB,mBAEVE,EAFU,KAEFC,EAFE,OAG2BH,mBAAShC,EAAW,GAAGE,MAHlD,mBAGV4B,EAHU,KAGMM,EAHN,OAIWJ,qBAJX,mBAIVtB,EAJU,KAIF2B,EAJE,KAyBjB,OACE,kBAACjC,EAAD,CAAYkC,OAAO,GAAGC,OAAO,MAAMC,SARhB,SAACC,GACpBA,EAAMC,iBAbgB,WACtB,IAAMC,EAAwB3C,EAAW4C,MAAK,SAAAC,GAAQ,OAAIA,EAAS3C,OAAS0B,KAAmBzB,KACzF2C,EAAqB9C,EAAW4C,MAAK,SAAAC,GAAQ,OAAIA,EAAS3C,OAAS4B,KAAgB3B,KAEzFkC,EAAU,CACRX,iBAAkBQ,EAClBL,cAAeK,EAASS,EAAwBG,EAChDlB,oBACAE,mBAOFiB,GACAZ,EAAU,MAKR,kBAAC7B,EAAD,KACE,kBAACK,EAAD,KACE,kBAACY,EAAD,CAAMyB,UAAU,mBAAhB,uCACA,kBAACjC,EAAD,CACEiC,UAAU,cACVC,MAAOrB,EACPsB,SAAU,SAAAT,GAAK,OAAIR,EAAqBQ,EAAMU,OAAOF,SAEpDjD,EAAWoD,KAAI,SAAAP,GAAQ,OACtB,4BACE3C,KAAK,WACL+C,MAAOJ,EAAS3C,KAChBmD,IAAKR,EAAS5C,OAEb4C,EAAS3C,YAOpB,kBAACI,EAAD,KACE,kBAACK,EAAD,KACE,kBAACY,EAAD,eACA,kBAACN,EAAD,CACEqC,KAAK,SACLpD,KAAK,SACLqD,KAAK,OACLC,YAAY,mBACZR,UAAU,cAAcS,IAAI,IAC5BC,UAAQ,EACRT,MAAOf,EACPgB,SAAU,SAAAT,GAAK,OAAIN,EAAUM,EAAMU,OAAOF,YAKhD,kBAAC3C,EAAD,KACE,kBAACK,EAAD,KACE,kBAACY,EAAD,6CACA,kBAACR,EAAD,CACEiC,UAAU,cACVC,MAAOnB,EACPoB,SAAU,SAAAT,GAAK,OAAIL,EAAkBK,EAAMU,OAAOF,SAEjDjD,EAAWoD,KAAI,SAAAP,GAAQ,OACtB,4BACE3C,KAAK,WACL+C,MAAOJ,EAAS3C,KAChBmD,IAAKR,EAAS5C,OAEb4C,EAAS3C,YAOpB,kBAACI,EAAD,KACE,kBAACa,EAAD,kBAEF,kBAACb,EAAD,CAAWE,MAAI,GAAf,iJAIA,kBAAC,EAAD,CAAQE,OAAQA,M,0JC/Ff,IAAMiD,EAAcjE,IAAOa,EAAV,KACL,qBAAEX,MAAiBgE,MAAMC,aCW/BC,EAAQ,WAAO,IAAD,EACC9B,mBAAS,IAAI+B,MADd,mBAChBC,EADgB,KACVC,EADU,KAavB,OAVAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BH,EAAQ,IAAIF,QACb,KAEH,OAAO,WACHM,cAAcF,MAEnB,IAGC,kBAACR,EAAD,sBAEK,IA3BM,SAACK,GAAD,OACfA,EAAKM,oBAAeC,EAAW,CAC3BC,KAAM,UACNC,MAAO,OACPC,QAAS,OACTC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YAoBHC,CAAWf,K,ybC5BjB,IAAMgB,EAAcC,YAAH,IAcKC,KAGV,qBAAEtF,MAAiBgE,MAAMuB,e,sOClBrC,IAAMC,EAAU1F,IAAO2F,IAAV,KCFPzF,EAAQ,CACjBC,OAAQ,CACJqF,WAAY,QACZ7D,iBAAkB,OAClBC,WAAY,QACZxB,MAAO,OACPU,KAAM,qBACNE,OAAQ,QAEZG,YAAa,CACTC,OAAQ,KAEZ8C,MAAO,CACHuB,YAAa,4BACbtB,UAAW,eCQJyB,MAbf,WACE,OACE,kBAAC,IAAD,CAAe1F,MAAOA,GACpB,kBAACwF,EAAD,KACE,kBAACJ,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.49cba747.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dollar-5360047_1920.60d3c8b2.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.h1`\r\n    text-align: center;\r\n    color: ${({theme}) => theme.colors.title};\r\n    font-size: 40px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <StyledHeader>Kantor Online</StyledHeader>\r\n);\r\n\r\nexport { Header };","const currencies = [\r\n    {short: \"pln\", name: \"PLN\", rate: 1},\r\n    {short: \"eur\", name: \"EUR\", rate: 4.4660},\r\n    {short: \"usd\", name: \"USD\", rate: 3.9806},\r\n    {short: \"gbp\", name: \"GBP\", rate: 4.8851},\r\n    {short: \"chf\", name: \"CHF\", rate: 4.1818},\r\n];\r\n\r\nexport {currencies};","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-auto-columns: 1fr;\r\n    grid-gap: 20px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    display: flex;\r\n    margin: 0px;\r\n\r\n    ${({ info }) => info && css`\r\n        color: ${({ theme }) => theme.colors.info};\r\n        font-size: 14px;\r\n    `}\r\n    \r\n    ${({ result }) => result && css`\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        font-size: 28px;\r\n        color: ${({ theme }) => theme.colors.result};\r\n    `}\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    flex: 1 0 100%;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n            flex-wrap: wrap;\r\n        }\r\n    `;\r\n\r\nexport const Select = styled.select`\r\n    flex: 0 1 100%;\r\n    border-radius: 10px;\r\n    border: 1px solid teal;\r\n    padding: 8px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex: 0 1 100%;\r\n    border-radius: 10px;\r\n    border: 1px solid teal;\r\n    padding: 8px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex: 1;\r\n    background-color: ${({theme}) => theme.colors.buttonBackground};\r\n    border-radius: 5px;\r\n    color: ${({theme}) => theme.colors.buttonText};\r\n    padding: 8px;\r\n    border: none;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    flex: 0 0 300px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        flex: 0 1 auto;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Paragraph } from \"../styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <Paragraph result>\r\n        {!!result && (\r\n            <>\r\n                {result.amountPossessed.toFixed(2)}&nbsp;{result.possessedCurrency}&nbsp;=&nbsp;\r\n                <strong>{result.amountRecived.toFixed(2)}&nbsp;{result.wantedCurrency}</strong>\r\n            </>\r\n        )}\r\n    </Paragraph>\r\n);\r\n\r\nexport { Result };","import React, { useState } from \"react\";\r\nimport { currencies } from \"./currencies\";\r\nimport { Result } from \"./Result\";\r\nimport { StyledForm, Paragraph, Label, Select, Input, Button, Span } from \"./styled\";\r\n\r\nconst Form = () => {\r\n  const [possessedCurrency, setPossessedCurrency] = useState(currencies[0].name);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [wantedCurrency, setWantedCurrency] = useState(currencies[0].name);\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = () => {\r\n    const possessedCurrencyRate = currencies.find(currency => currency.name === possessedCurrency).rate;\r\n    const wantedCurrencyRate = currencies.find(currency => currency.name === wantedCurrency).rate;\r\n\r\n    setResult({\r\n      amountPossessed: +amount,\r\n      amountRecived: amount * possessedCurrencyRate / wantedCurrencyRate,\r\n      possessedCurrency,\r\n      wantedCurrency,\r\n    });\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    calculateResult();\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledForm action=\"\" method=\"GET\" onSubmit={onFormSubmit}>\r\n      <Paragraph>\r\n        <Label>\r\n          <Span className=\"form__labelText\">Wymieniasz z (wybierz walutÄ™):</Span>\r\n          <Select\r\n            className=\"form__input\"\r\n            value={possessedCurrency}\r\n            onChange={event => setPossessedCurrency(event.target.value)}\r\n          >\r\n            {currencies.map(currency => (\r\n              <option\r\n                name=\"currency\"\r\n                value={currency.name}\r\n                key={currency.short}\r\n              >\r\n                {currency.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </Label>\r\n      </Paragraph>\r\n\r\n      <Paragraph>\r\n        <Label>\r\n          <Span>Kwota:</Span>\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            step=\"0.01\"\r\n            placeholder=\"Wpisz kwotÄ™\"\r\n            className=\"form__input\" min=\"0\"\r\n            required\r\n            value={amount}\r\n            onChange={event => setAmount(event.target.value)}\r\n          />\r\n        </Label>\r\n      </Paragraph>\r\n\r\n      <Paragraph>\r\n        <Label>\r\n          <Span>Wymieniasz na (wybierz walutÄ™):</Span>\r\n          <Select\r\n            className=\"form__input\"\r\n            value={wantedCurrency}\r\n            onChange={event => setWantedCurrency(event.target.value)}\r\n          >\r\n            {currencies.map(currency => (\r\n              <option\r\n                name=\"currency\"\r\n                value={currency.name}\r\n                key={currency.short}\r\n              >\r\n                {currency.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </Label>\r\n      </Paragraph>\r\n\r\n      <Paragraph>\r\n        <Button>Przelicz</Button>\r\n      </Paragraph>\r\n      <Paragraph info>\r\n        *WartoÅ›ci kursÃ³w walut aktualne na dzieÅ„ 01.07.2020 r. wedÅ‚ug danych\r\n        pochodzÄ…cych ze strony Narodowego Banku Polskiego\r\n      </Paragraph>\r\n      <Result result={result} />\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport { Form };","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    font-family: ${({theme}) => theme.fonts.clockFont};\r\n    font-size: 14px;\r\n    margin: 0;\r\n    text-align: end;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { StyledClock } from \"./styled\";\r\n\r\nconst formatDate = (date) =>\r\n    date.toLocaleString(undefined, {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n    });\r\n\r\nexport const Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <StyledClock>\r\n            DziÅ› jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </StyledClock>\r\n    );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"../images/dollar-5360047_1920.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    font-family: ${({theme}) => theme.fonts.primaryFont}\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex: 0 1 750px;\r\n    font-size: 18px;\r\n    background-color: white;\r\n    padding: 30px;\r\n    border-radius: 50px;\r\n    opacity: 0.85;\r\n    margin: 20px;\r\n`;","export const theme = {\r\n    colors: {\r\n        background: \"white\",\r\n        buttonBackground: \"teal\",\r\n        buttonText: \"white\",\r\n        title: \"teal\",\r\n        info: \"rgb(107, 107, 107)\",\r\n        result: \"teal\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 767,\r\n    },\r\n    fonts: {\r\n        primaryFont: \"'Montserrat', sans-serif;\",\r\n        clockFont: \"monospace;\"\r\n    }\r\n};","import React from 'react';\nimport { Header } from \"./Header\";\nimport { Form } from \"./Form\";\nimport { Clock } from \"./Clock\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { Wrapper } from \"./styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport {theme} from \"./theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <GlobalStyle />\n        <Clock />\n        <Header />\n        <Form />\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}